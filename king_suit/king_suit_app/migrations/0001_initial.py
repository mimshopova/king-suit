# Generated by Django 4.1.3 on 2022-11-13 08:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import king_suit.king_suit_app.core.app_validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='KingSuitUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2), king_suit.king_suit_app.core.app_validators.validate_only_letters], verbose_name='First name')),
                ('last_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2), king_suit.king_suit_app.core.app_validators.validate_only_letters], verbose_name='Last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Do not show', 'Do not show')], max_length=11, verbose_name='Gender')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_photos/', validators=[king_suit.king_suit_app.core.app_validators.validate_file_size], verbose_name='Personal photo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='article_photos/', validators=[king_suit.king_suit_app.core.app_validators.validate_file_size], verbose_name='Article photo')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Department name')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(4)], verbose_name='Name')),
                ('price', models.PositiveIntegerField(verbose_name='Price')),
                ('size', models.CharField(max_length=60, verbose_name='Size')),
                ('description', models.TextField(verbose_name='Description')),
                ('photo', models.ImageField(upload_to='suit_photos/', validators=[king_suit.king_suit_app.core.app_validators.validate_file_size], verbose_name='Suit photo')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='KingSuitUserFeedbackComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='feedback_photos/', validators=[king_suit.king_suit_app.core.app_validators.validate_file_size], verbose_name='Photo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2), king_suit.king_suit_app.core.app_validators.validate_only_letters], verbose_name='First name')),
                ('last_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2), king_suit.king_suit_app.core.app_validators.validate_only_letters], verbose_name='Last name')),
                ('age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Age')),
                ('hobby', models.CharField(blank=True, max_length=30, null=True, verbose_name='Hobby')),
                ('position', models.CharField(max_length=50, verbose_name='Position')),
                ('photo', models.ImageField(upload_to='employee_photos/', validators=[king_suit.king_suit_app.core.app_validators.validate_file_size], verbose_name='Employee photo')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='king_suit_app.department')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
    ]
